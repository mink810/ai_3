-- ============================================================
-- Oracle 11g : AI 스키마 및 SIGNAL 테이블(수정본)
-- - Host/Port 컬럼 추가
-- - (권장) 기존 테이블/시퀀스/트리거가 있으면 드롭 후 재생성
-- ============================================================

-- 0) (선택) AI 사용자/권한 설정 (환경 정책에 맞게)
-- CREATE USER/GRANT/QUOTA 구간은 원본과 동일하게 사용하세요.

-- 1) 기존 객체 드롭 (존재 시)
BEGIN
  EXECUTE IMMEDIATE 'DROP TRIGGER AI.TRG_SIGNAL_PK';
EXCEPTION WHEN OTHERS THEN NULL;
END;
/
BEGIN
  EXECUTE IMMEDIATE 'DROP TABLE AI.SIGNAL PURGE';
EXCEPTION WHEN OTHERS THEN
  IF SQLCODE != -942 THEN RAISE; END IF;
END;
/
BEGIN
  EXECUTE IMMEDIATE 'DROP SEQUENCE AI.SEQ_SIGNAL';
EXCEPTION WHEN OTHERS THEN
  IF SQLCODE != -2289 THEN RAISE; END IF;
END;
/

-- 2) SIGNAL 테이블 생성 (11g: IDENTITY 미지원 → 시퀀스/트리거 사용)
CREATE TABLE AI.SIGNAL (
  ID            NUMBER PRIMARY KEY,
  TS_UTC        TIMESTAMP(6) WITH TIME ZONE NOT NULL, -- 수집 시각(UTC)
  SOURCE        VARCHAR2(64 CHAR)   NOT NULL,         -- 예: 'modbus_tcp', 'opc', 'can'
  DRIVER_ID     VARCHAR2(64 CHAR),                     -- 드라이버 인스턴스 식별자
  UNIT_ID       NUMBER,                                -- 장치/슬레이브/노드 ID
  SIGNAL_NAME   VARCHAR2(128 CHAR)  NOT NULL,         -- 예: '온도', '압력', '상태', ...
  VALUE_NUM     NUMBER,                                -- 수치 값(상태코드 등은 숫자로 저장)
  UNIT          VARCHAR2(32 CHAR),                     -- 표시 단위(예: '°C','kPa','kWh')
  PRIORITY      NUMBER,                                -- 표시/알람 우선순위 (필요 시)
  HOST          VARCHAR2(255 CHAR),                    -- ★ 추가: 수집 호스트
  PORT          NUMBER(10),                            -- ★ 추가: 수집 포트
  META_JSON     CLOB                                   -- word/byte order, address, length 등 메타
);

-- 3) PK 자동 채번용 시퀀스/트리거
CREATE SEQUENCE AI.SEQ_SIGNAL
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;

CREATE OR REPLACE TRIGGER AI.TRG_SIGNAL_PK
BEFORE INSERT ON AI.SIGNAL
FOR EACH ROW
BEGIN
  IF :NEW.ID IS NULL THEN
    SELECT AI.SEQ_SIGNAL.NEXTVAL INTO :NEW.ID FROM DUAL;
  END IF;
END;
/
-- SHOW ERRORS TRIGGER AI.TRG_SIGNAL_PK

-- 4) 조회 최적화 인덱스
CREATE INDEX AI.IX_SIGNAL_TIME          ON AI.SIGNAL (TS_UTC);
CREATE INDEX AI.IX_SIGNAL_SNAME_TIME    ON AI.SIGNAL (SIGNAL_NAME, TS_UTC);
CREATE INDEX AI.IX_SIGNAL_SOURCE_TIME   ON AI.SIGNAL (SOURCE, TS_UTC);
CREATE INDEX AI.IX_SIGNAL_DRIVER_TIME   ON AI.SIGNAL (DRIVER_ID, TS_UTC);
CREATE INDEX AI.IX_SIGNAL_HOSTPORT_TIME ON AI.SIGNAL (HOST, PORT, TS_UTC);  -- ★ 추가

COMMIT;
